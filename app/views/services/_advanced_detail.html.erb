<%  state = EnginesService.state @service_name %>

<div class="row">
  <div class="col-sm-6">
    <table>
      <tr><td><label>Service name</label></td><td><%= @service_name %></td></tr> 
      <tr><td><label>Host FQDN</label></td><td><a href=http://<%= EnginesService.fqdn @service_name %>><%= EnginesService.fqdn @service_name %></a></td></tr> 
      <tr><td><label>Current state</label></td><td><%= state %></td></tr>
      <tr><td><label>Default state</label></td><td><%= EnginesService.default_startup_state @service_name %></td></tr> 
      <tr><td><label>Memory</label></td><td><%= EnginesService.memory @service_name %> MB</td></tr>
      <tr><td><label>Monitored</label></td><td><%= EnginesService.monitored @service_name %></td></tr>
      <tr><td><label>Framework</label></td><td><%= EnginesService.framework @service_name %>/<%= EnginesService.runtime @service_name %></td></tr>
      <tr><td><label>Image</label></td><td><%= EnginesService.image @service_name %> </td></tr>
      <tr><td><label>Blue print source</label></td><td><%= EnginesService.repo @service_name %> </td></tr>
    </table>
  </div>

  <div class="col-sm-6">
    <div class="top-gap">
      <label>Router registration</label>
      <div class="btn-toolbar">
        <div class="btn-group"> 
          <%= link_to 'Register', register_website_service_path(@service_name), class: "btn btn-default" %>
          <%= link_to 'Deregister', deregister_website_service_path(@service_name), class: "btn btn-default" %>
        </div>
      </div>
    </div>
    <div class="top-gap">
      <label>DNS registration</label>
      <div class="btn-toolbar">
        <div class="btn-group"> 
          <%= link_to 'Register', register_dns_service_path(@service_name), class: "btn btn-default" %> 
          <%= link_to 'Deregister', deregister_dns_service_path(@service_name), class: "btn btn-default" %>
        </div>
      </div>
    </div>
  </div>

</div>

<div class="row advanced_detail">
  <div class="col-sm-12 top-gap">

    <label>Network activity</label>
    <pre><table>
      <tr><td><label>In</label></td><td><%= EnginesService.network_metrics(@service_name)[:in].to_s + " bytes" %></td></tr>
      <tr><td><label>Out</label></td><td><%= EnginesService.network_metrics(@service_name)[:out].to_s + " bytes" %></td></tr>
    </table></pre>

    <label>Memory usage</label>
    <pre><table>
      <tr><td><label>Current</label></td><td><%= EnginesService.memory_statistics(@service_name)[:current].to_s %></td></tr>
      <tr><td><label>Maximum</label></td><td><%= EnginesService.memory_statistics(@service_name)[:maximum].to_s %></td></tr>
      <tr><td><label>Limit</label></td><td><%= EnginesService.memory_statistics(@service_name)[:limit].to_s %></td></tr>
    </table></pre>

    <label>Ports</label>
    <pre><table>
      <tr><td>Web port: <%= EnginesService.port(@service_name) || "n/a" %></td></tr>
      <tr><td colspan=2>This port is internal to docker environ webport is always 443 and 80 externally</td></tr>
       <% if EnginesService.eports(@service_name) && EnginesService.eports(@service_name).length >0 %>
         <tr><td colspan=2>Open Ports, Public ports are represented as internal:external port</td></tr>
         <% EnginesService.eports(@service_name).each do |port| %>
           <% if port != nil %>
             <tr><td><%= port.name%></td><td><%= port.port.to_s %>:<%= port.external.to_s %> <%= port.publicFacing%></td></tr>
           <%end%>
         <%end%>
       <%end%>
    </table></pre>

    <label>Last error</label>
    <pre><table><tr><td><%= EnginesService.last_error @service_name %></td></tr></table></pre>
  
    <label>Environment</label>
    <% environments = EnginesService.environments(@service_name) %>
    <% if environments.present? && environments.length > 0 %>
      <pre><table>
        <th>Name</th>
        <th>Value</th>
        <% environments.each do |v|%>
          <% if v.present? %>
            <tr>
              <td><%= v.name %></td>
              <td><%= v.value %></td>
              <td><%= v.setatrun %></td>
            </tr>
          <%end%>
        <%end%>
      </table></pre>
    <% else %>
      <pre>None</pre>
    <% end %>

    <label>Volumes</label>
    <% if EnginesService.volumes(@service_name) && EnginesService.volumes(@service_name).length > 0 %>
      <pre><table>
        <% EnginesService.volumes(@service_name).each do |v|%>
           <tr>
            <td><%=v.localpath%>/<%=v.name%>:<%=v.remotepath%>/<%=v.name%></td>
          </tr>
        <%end%>
      </table></pre>
    <% else %>
      <pre>None</pre>
    <% end %>  

    <label>Consumers</label>
    <% if EnginesService.consumers(@service_name).present? %>                
      <pre><table>
        <% EnginesService.consumers(@service_name).each do |cons|%>
           <tr><td><%= cons %></td></tr>
        <% end %>
      </table></pre>
    <% else %>
      <pre>None</pre>
    <% end %>  

    <label>Database</label>
    <% if EnginesService.databases(@service_name) && EnginesService.databases(@service_name).length > 0 %>
      <pre><table>
        <% EnginesService.databases(@service_name).each do |db|%>
           <tr><td><%= db %></td></tr>
        <% end %>
      </table></pre>
    <% else %>
      <pre>None</pre>
    <% end %>  

     <label>Statistics</label>  
    <% if state != "nocontainer" 
      stats = EnginesService.stats(@service_name)
      if stats != nil  %>
        <pre><table>
          <tr><td>State: <%= stats.state  %></tr></td>
          <tr><td>Processes: <%=stats.proc_cnt %> <b>List in ps list in .stats</b></tr></td>
          <% if state == "stopped" %>
            <tr><td>Stopped: <%=stats.stopped_ts %><% else %>Started: <%=stats.started_ts %></tr></td>
          <%end%>
          <tr><td>Memory Used:Virtual <%=stats.VSSMemory.to_s  %> Resident <%=stats.RSSMemory.to_s  %></tr></td>
          <tr><td>CPU Time: <%=stats.cpuTime.to_s %> seconds *Since Engine start</tr></td>
        </table></pre>
      <%end%>
    <% else %>
      <pre>None</pre>
     <% end %>
  
     <label>Processes</label>
     <% res = EnginesService.ps_container @service_name %>
     <% if EnginesService.last_result(@service_name).present? %>
       <pre><table>
         <% EnginesService.last_result(@service_name).each_line do |line | 
           vals = line.split %>
           <tr>
             <% vals.each do |v| %>  
               <td><%= v %></td>
             <% end %>
           </tr>    
         <% end %>
       </table></pre>
     <% else %>
      <pre>None</pre>
     <% end %>

    <label>Logs</label>
    <% res = EnginesService.logs_container(@service_name)%>
    <% if EnginesService.last_result(@service_name).present? %>
      <pre><%= EnginesService.last_result @service_name %></pre>
    <% else %>
      <pre>None</pre>
     <% end %>

  </div>
</div>
